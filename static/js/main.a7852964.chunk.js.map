{"version":3,"sources":["components/grid/styles.js","utils/gameovercharmap.js","components/grid/gameOver.js","components/grid/index.js","hooks/keyPress/index.js","hooks/snake/index.js","hooks/dot/index.js","styles/globalStyle.js","App.js","index.js"],"names":["Grid","styled","div","Div","props","x","y","useState","on","setOn","toggle","prev","Toggler","useEffect","window","addEventListener","handleReset","timer","setInterval","clearInterval","removeEventListener","gameOverText","map","element","Grd","gameState","setGameState","gameSpeed","React","useRef","direction","queue","downHandler","e","preventDefault","current","keyCode","handleButton","console","log","touches","pageX","innerWidth","pressedDirection","resetQueue","resetDirection","useDirectionKey","didCatch","setDidCatch","position","setPosition","move","delta","newPosition","slice","length","grow","resetSnake","useSnake","dotPosition","setDotPosition","dotScore","setDotScore","document","title","score","deployDot","snakeArray","randomPos","Math","ceil","random","find","JSON","stringify","resetScore","useDot","positionArray","headPosition","checkDotCollision","clearTimeout","segment","GlobalStyle","createGlobalStyle","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a7852964.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Grid = styled.div`\r\n  position: relative;\r\n  border: 1px solid black;\r\n  height: min(100vh, 100vw);\r\n  width: min(100vh, 100vw);\r\n  margin: auto;\r\n  display: grid;\r\n  grid-template-columns: repeat(20, 1fr);\r\n  grid-template-rows: repeat(20, 1fr);\r\n  background-color: #7c9171;\r\n  margin-top: calc((100vh - min(100vw, 100vh)) / 2);\r\n`;\r\n\r\nexport const Div = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  border: 1px solid black;\r\n  grid-column: ${(props) => props.x};\r\n  grid-row: ${(props) => props.y};\r\n  border: none;\r\n  background-color: #526348;\r\n`;\r\n","export default [\r\n  [4, 5],\r\n  [4, 6],\r\n  [4, 7],\r\n  [5, 7],\r\n  [6, 7],\r\n  [7, 7],\r\n  [7, 6],\r\n  [7, 5],\r\n  [7, 8],\r\n  [7, 9],\r\n  [6, 10],\r\n  [5, 10],\r\n  [10, 5],\r\n  [11, 5],\r\n  [12, 6],\r\n  [12, 7],\r\n  [12, 8],\r\n  [11, 9],\r\n  [10, 9],\r\n  [9, 8],\r\n  [9, 7],\r\n  [9, 6],\r\n  [14, 5],\r\n  [14, 6],\r\n  [14, 7],\r\n  [14, 8],\r\n  [15, 9],\r\n  [16, 9],\r\n  [17, 8],\r\n  [17, 7],\r\n  [17, 6],\r\n  [17, 5],\r\n  [3, 12],\r\n  [3, 13],\r\n  [3, 14],\r\n  [3, 15],\r\n  [3, 16],\r\n  [4, 16],\r\n  [5, 16],\r\n  [6, 15],\r\n  [6, 14],\r\n  [6, 13],\r\n  [5, 12],\r\n  [4, 12],\r\n  [8, 12],\r\n  [8, 13],\r\n  [8, 14],\r\n  [8, 15],\r\n  [8, 16],\r\n  [10, 12],\r\n  [11, 12],\r\n  [12, 12],\r\n  [13, 12],\r\n  [10, 13],\r\n  [10, 14],\r\n  [11, 14],\r\n  [12, 14],\r\n  [10, 15],\r\n  [10, 16],\r\n  [11, 16],\r\n  [12, 16],\r\n  [13, 16],\r\n  [15, 12],\r\n  [15, 13],\r\n  [15, 14],\r\n  [15, 15],\r\n  [15, 16],\r\n  [16, 16],\r\n  [17, 16],\r\n  [18, 15],\r\n  [18, 14],\r\n  [18, 13],\r\n  [17, 12],\r\n  [16, 12],\r\n];\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Div } from \"./styles\";\r\nimport gameOverText from \"../../utils/gameovercharmap\";\r\n\r\nconst Toggler = () => {\r\n  const [on, setOn] = useState(false);\r\n  const toggle = () => {\r\n    setOn((prev) => !prev);\r\n  };\r\n  return { on: on, toggle };\r\n};\r\n\r\nexport default function (props) {\r\n  const { on, toggle } = Toggler();\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"keydown\", props.handleReset);\r\n    const timer = setInterval(() => {\r\n      toggle();\r\n    }, 300);\r\n    return () => {\r\n      clearInterval(timer);\r\n      window.removeEventListener(\"keydown\", props.handleReset);\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <Grid>\r\n      {on &&\r\n        gameOverText.map((element) => <Div x={element[0]} y={element[1]} />)}\r\n    </Grid>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Div } from \"./styles\";\r\nimport useDirectionKey from \"../../hooks/keyPress\";\r\nimport useSnake from \"../../hooks/snake\";\r\nimport useDot from \"../../hooks/dot\";\r\nimport GameOver from \"./gameOver\";\r\n\r\nconst checkSelfCollision = (positionArray) => {\r\n  return positionArray\r\n    .slice(1, positionArray.length - 1)\r\n    .find(\r\n      (element) =>\r\n        element.x === positionArray[0].x && element.y === positionArray[0].y\r\n    );\r\n};\r\n\r\nconst checkDotCollision = (headPosition, dotPosition) => {\r\n  return headPosition.x === dotPosition.x && headPosition.y === dotPosition.y;\r\n};\r\n\r\nexport default function Grd() {\r\n  const [gameState, setGameState] = useState(\"RUNNING\");\r\n  const gameSpeed = React.useRef(100);\r\n  const { pressedDirection, resetQueue, resetDirection } = useDirectionKey();\r\n  const { position, move, grow, resetSnake } = useSnake();\r\n  const { score, deployDot, dotPosition, resetScore } = useDot();\r\n\r\n  // first time loading\r\n  useEffect(() => {\r\n    deployDot(position);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      move(pressedDirection);\r\n      resetQueue(); //avoid two keystrokes during one move cycle\r\n      //check for collision with itself\r\n      if (checkSelfCollision(position)) {\r\n        setGameState(\"DEFEAT\");\r\n      }\r\n      //check for collision with dot and score\r\n      if (checkDotCollision(position[0], dotPosition)) {\r\n        score();\r\n        grow();\r\n        deployDot(position);\r\n        gameSpeed.current -= 2;\r\n      }\r\n    }, gameSpeed.current);\r\n    return () => {\r\n      clearTimeout(timer);\r\n    };\r\n  });\r\n\r\n  const handleReset = () => {\r\n    resetSnake();\r\n    gameSpeed.current = 100;\r\n    resetScore();\r\n    deployDot(position);\r\n    setGameState(\"RUNNING\");\r\n    resetDirection();\r\n  };\r\n\r\n  if (gameState !== \"DEFEAT\") {\r\n    return (\r\n      <Grid>\r\n        <Div x={dotPosition.x} y={dotPosition.y} />\r\n        {position.map((segment) => (\r\n          <Div x={segment.x} y={segment.y} />\r\n        ))}\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  if (gameState === \"DEFEAT\") {\r\n    return <GameOver handleReset={handleReset} />;\r\n  }\r\n}\r\n","import { useRef, useEffect } from \"react\";\r\n\r\nexport default function LastPressedKey() {\r\n  // State for keeping track of whether key is pressed\r\n  const direction = useRef(\"RIGHT\");\r\n  const queue = useRef(true);\r\n\r\n  // If pressed key is our target key then set to true\r\n  function downHandler(e) {\r\n    e.preventDefault();\r\n    if (queue.current) {\r\n      if (e.keyCode === 37 && direction.current !== \"RIGHT\") {\r\n        direction.current = \"LEFT\";\r\n      } else if (e.keyCode === 38 && direction.current !== \"DOWN\") {\r\n        direction.current = \"UP\";\r\n      }\r\n      if (e.keyCode === 39 && direction.current !== \"LEFT\") {\r\n        direction.current = \"RIGHT\";\r\n      }\r\n      if (e.keyCode === 40 && direction.current !== \"UP\") {\r\n        direction.current = \"DOWN\";\r\n      }\r\n      queue.current = false;\r\n    }\r\n  }\r\n\r\n  function handleButton(e) {\r\n    console.log(e.touches[0].pageX);\r\n    console.log(window.innerWidth);\r\n    if (queue.current) {\r\n      if (e.touches[0].pageX > window.innerWidth / 2) {\r\n        if (direction.current === \"UP\") {\r\n          direction.current = \"RIGHT\";\r\n        } else if (direction.current === \"RIGHT\") {\r\n          direction.current = \"DOWN\";\r\n        } else if (direction.current === \"DOWN\") {\r\n          direction.current = \"LEFT\";\r\n        } else if (direction.current === \"LEFT\") {\r\n          direction.current = \"UP\";\r\n        }\r\n      } else {\r\n        if (direction.current === \"UP\") {\r\n          direction.current = \"LEFT\";\r\n        } else if (direction.current === \"LEFT\") {\r\n          direction.current = \"DOWN\";\r\n        } else if (direction.current === \"DOWN\") {\r\n          direction.current = \"RIGHT\";\r\n        } else if (direction.current === \"RIGHT\") {\r\n          direction.current = \"UP\";\r\n        }\r\n      }\r\n      queue.current = false;\r\n    }\r\n  }\r\n\r\n  const resetQueue = () => {\r\n    queue.current = true;\r\n  };\r\n\r\n  const resetDirection = () => {\r\n    direction.current = \"RIGHT\";\r\n    queue.current = false;\r\n  };\r\n\r\n  // Add event listeners\r\n  useEffect(() => {\r\n    window.addEventListener(\"keydown\", downHandler);\r\n    window.addEventListener(\"touchstart\", handleButton, false);\r\n    // Remove event listeners on cleanup\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", downHandler);\r\n      window.removeEventListener(\"touchstart\", handleButton, false);\r\n    };\r\n  }, []); // Empty array ensures that effect is only run on mount and unmount\r\n\r\n  return {\r\n    pressedDirection: direction.current,\r\n    resetQueue,\r\n    resetDirection,\r\n  };\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function () {\r\n  const [didCatch, setDidCatch] = React.useState(false);\r\n  const [position, setPosition] = React.useState([\r\n    { x: 5, y: 10 },\r\n    { x: 4, y: 10 },\r\n    { x: 3, y: 10 },\r\n    { x: 2, y: 10 },\r\n  ]);\r\n\r\n  const move = (direction) => {\r\n    let delta = { x: 0, y: 0 };\r\n    let newPosition = { x: 0, y: 0 };\r\n    switch (direction) {\r\n      case \"UP\":\r\n        delta = { x: 0, y: -1 };\r\n        break;\r\n      case \"DOWN\":\r\n        delta = { x: 0, y: 1 };\r\n        break;\r\n      case \"LEFT\":\r\n        delta = { x: -1, y: 0 };\r\n        break;\r\n      case \"RIGHT\":\r\n        delta = { x: 1, y: 0 };\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    newPosition = { x: position[0].x + delta.x, y: position[0].y + delta.y };\r\n    //check for boundary wrap\r\n    if (newPosition.x === 21) {\r\n      newPosition.x = 1;\r\n    }\r\n    if (newPosition.x === 0) {\r\n      newPosition.x = 20;\r\n    }\r\n    if (newPosition.y === 21) {\r\n      newPosition.y = 1;\r\n    }\r\n    if (newPosition.y === 0) {\r\n      newPosition.y = 20;\r\n    }\r\n    //check if snake did catch the dot to adjust the array length\r\n    if (!didCatch) {\r\n      setPosition((prev) => [newPosition, ...prev.slice(0, prev.length - 1)]);\r\n    } else {\r\n      setPosition((prev) => [newPosition, ...prev]);\r\n      setDidCatch(false);\r\n    }\r\n  };\r\n\r\n  const grow = () => {\r\n    setDidCatch(true);\r\n  };\r\n\r\n  const resetSnake = () => {\r\n    setDidCatch(false);\r\n    setPosition([\r\n      { x: 5, y: 10 },\r\n      { x: 4, y: 10 },\r\n      { x: 3, y: 10 },\r\n      { x: 2, y: 10 },\r\n    ]);\r\n  };\r\n\r\n  return { position, move, grow, resetSnake };\r\n}\r\n\r\n// import React from \"react\";\r\n\r\n// export default function () {\r\n//   const position = React.useRef([\r\n//     { x: 2, y: 10 },\r\n//     { x: 3, y: 10 },\r\n//     { x: 4, y: 10 },\r\n//     { x: 5, y: 10 },\r\n//   ]);\r\n\r\n//   const move = (direction) => {\r\n//     let delta = { x: 0, y: 0 };\r\n//     switch (direction) {\r\n//       case \"UP\":\r\n//         delta = { x: 0, y: -1 };\r\n//         break;\r\n//       case \"DOWN\":\r\n//         delta = { x: 0, y: 1 };\r\n//         break;\r\n//       case \"LEFT\":\r\n//         delta = { x: -1, y: 0 };\r\n//         break;\r\n//       case \"RIGHT\":\r\n//         delta = { x: 1, y: 0 };\r\n//         break;\r\n//       default:\r\n//         break;\r\n//     }\r\n//     position.current.pop();\r\n//     position.current.unshift({\r\n//       x: position.current[0].x + delta.x,\r\n//       y: position.current[0].y + delta.y,\r\n//     });\r\n//     if (position.current[0].x === 21) {\r\n//       position.current[0].x = 1;\r\n//     }\r\n//     if (position.current[0].x === -1) {\r\n//       position.current[0].x = 20;\r\n//     }\r\n//     if (position.current[0].y === 21) {\r\n//       position.current[0].y = 1;\r\n//     }\r\n//     if (position.current[0].y === -1) {\r\n//       position.current[0].y = 20;\r\n//     }\r\n//   };\r\n\r\n//   return { position: position.current, move };\r\n// }\r\n","import React from \"react\";\r\n\r\nexport default function () {\r\n  const [dotPosition, setDotPosition] = React.useState({ x: 3, y: 3 });\r\n  const [dotScore, setDotScore] = React.useState(0);\r\n\r\n  const deployDot = (snakeArray) => {\r\n    let randomPos = {};\r\n    do {\r\n      randomPos = {\r\n        x: Math.ceil(Math.random() * 20),\r\n        y: Math.ceil(Math.random() * 20),\r\n      };\r\n    } while (\r\n      snakeArray.find(\r\n        // eslint-disable-next-line no-loop-func\r\n        (element) => JSON.stringify(element) === JSON.stringify(randomPos)\r\n      )\r\n    );\r\n    setDotPosition(randomPos);\r\n  };\r\n\r\n  const score = () => {\r\n    setDotScore((prev) => prev + 1);\r\n  };\r\n\r\n  const resetScore = () => {\r\n    setDotScore(0);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    document.title = `Score: ${dotScore}`;\r\n  }, [dotScore]);\r\n\r\n  return { score, deployDot, dotPosition: dotPosition, resetScore };\r\n}\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n* {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n}\r\n\r\nhtml, body, #root {\r\n  background-color: black;\r\n  touch-action: manipulation;\r\n}\r\n`;\r\n","import React from \"react\";\nimport Grid from \"./components/grid\";\nimport { GlobalStyle } from \"./styles/globalStyle\";\n\nfunction App() {\n  return (\n    <>\n      <Grid />\n      <GlobalStyle />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}